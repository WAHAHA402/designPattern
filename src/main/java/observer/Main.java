package observer;

/**
 * 作者:      zhangrw
 * 功能描述：    观察者模式
 * 创建时间：  2018/7/16 16:38
 */

/**
 * 对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。
 * 1.抽象主题(Subject)角色：把所有对观察者对象的引用保存在一个集合中，每个抽象主题角色都可以有任意数量的观察者。
 *  抽象主题提供一个接口，可以增加和删除观察者角色。一般用一个抽象类和接口来实现。

 2.抽象观察者(Observer)角色：为所有具体的观察者定义一个接口，在得到主题的通知时更新自己。

 3.具体主题(ConcreteSubject)角色：在具体主题内部状态改变时，给所有登记过的观察者发出通知。
    具体主题角色通常用一个子类实现。

 4.具体观察者(ConcreteObserver)角色：该角色实现抽象观察者角色所要求的更新接口，以便使本身的状态与主题的状态相协调。
    通常用一个子类实现。如果需要，具体观察者角色可以保存一个指向具体主题角色的引用。
 */
public class Main {
}
